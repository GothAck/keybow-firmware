
/*
 * This file was automatically generated by sdbus-c++-xml2cpp; DO NOT EDIT!
 */

#ifndef __sdbuscpp__adaptor_hpp__adaptor__H__
#define __sdbuscpp__adaptor_hpp__adaptor__H__

#include <sdbus-c++/sdbus-c++.h>
#include <string>
#include <tuple>

namespace org {
namespace freedesktop {
namespace DBus {

class ObjectManager_adaptor
{
public:
    static constexpr const char* INTERFACE_NAME = "org.freedesktop.DBus.ObjectManager";

protected:
    ObjectManager_adaptor(sdbus::IObject& object)
        : object_(object)
    {
        object_.registerMethod("GetManagedObjects").onInterface(INTERFACE_NAME).withOutputParamNames("concatenatedString").implementedAs([this](){ return this->GetManagedObjects(); });
    }

    ~ObjectManager_adaptor() = default;

private:
    virtual std::map<sdbus::ObjectPath, std::map<std::string, std::map<std::string, sdbus::Variant>>> GetManagedObjects() = 0;

private:
    sdbus::IObject& object_;
};

}}} // namespaces

#endif
